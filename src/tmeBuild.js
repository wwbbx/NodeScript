// Generated by CoffeeScript 1.6.3
var buildCommand, cp, devenv, fs, path, platformAgentWin7RelativePath, setupPackageRelativePath, setupProjectFile, svnRoot, tmePlatformAgentSoluionFile, tmePlatformAgentSolution, tmeSetupProject;

cp = require('child_process');

path = require('path');

fs = require('fs');

devenv = "C:\\Program Files (x86)\\Microsoft Visual Studio 9.0\\Common7\\IDE\\devenv.com";

if (!fs.existsSync(devenv)) {
  console.log('devenv does not exists.');
}

svnRoot = "C:\\SVN\\HubDataServices\\Trunk";

if (!fs.existssync(svnroot)) {
  svnRoot = svnroot.replace("C:\\", "D:\\");
}

platformAgentWin7RelativePath = "Platforms\\TME\\PlatformAgent\\TmePlatformAgentWin7";

tmePlatformAgentSoluionFile = "TmePlatformAgentWin7.sln";

setupPackageRelativePath = "Platforms\\TME\\PlatformAgent\\TMEPlatformAgentSetup";

setupProjectFile = "TMEPlatformAgentSetup.vdproj";

tmePlatformAgentSolution = path.join(svnRoot, platformAgentWin7RelativePath, tmePlatformAgentSoluionFile);

tmeSetupProject = path.join(svnRoot, setupPackageRelativePath, setupProjectFile);

buildCommand = "\"" + this.devenv + "\" \"" + this.tmePlatformAgentSolution + "\" /Project \"" + this.tmeSetupProject + "\" /Rebuild Debug";

cp.exec(buildCommand, function(err, stdout, stderr) {
  if (err) {
    return console.log(stderr);
  } else {
    return console.log(stdout);
  }
});
